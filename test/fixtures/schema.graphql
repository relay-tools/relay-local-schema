type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node

  """Fetches objects given their IDs"""
  nodes(
    """The IDs of objects"""
    ids: [ID!]!
  ): [Node]!
  widget: Widget
  invalid: Widget
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Widget implements Node {
  """The ID of an object"""
  id: ID!
  name: String
}

type Mutation {
  setWidgetName(input: SetWidgetNameInput!): SetWidgetNamePayload
}

type SetWidgetNamePayload {
  widget: Widget
  clientMutationId: String
}

input SetWidgetNameInput {
  name: String!
  clientMutationId: String
}